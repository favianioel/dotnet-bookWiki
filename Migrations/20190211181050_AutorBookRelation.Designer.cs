// <auto-generated />
using System;
using BookWiki.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookWiki.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20190211181050_AutorBookRelation")]
    partial class AutorBookRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("BookWiki.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("BookWiki.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Genre");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Rating");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookWiki.Models.BookAutor", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("AutorId");

                    b.HasKey("BookId", "AutorId");

                    b.HasIndex("AutorId");

                    b.ToTable("BookAutor");
                });

            modelBuilder.Entity("BookWiki.Models.BookAutor", b =>
                {
                    b.HasOne("BookWiki.Models.Autor", "Autor")
                        .WithMany("BookAutor")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BookWiki.Models.Book", "Book")
                        .WithMany("BookAutor")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
